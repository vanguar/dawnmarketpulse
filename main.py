#!/usr/bin/env python3
import os, sys, requests, openai
from datetime import datetime, timezone, date
from time import sleep

openai.api_key = os.getenv("OPENAI_KEY")
TG_TOKEN       = os.getenv("TG_TOKEN")
CHANNEL_ID     = os.getenv("CHANNEL_ID")

MODEL   = "gpt-4o-mini"
TIMEOUT = 60

PROMPT = """
üìà –£—Ç—Ä–µ–Ω–Ω–∏–π –æ–±–∑–æ—Ä ‚Ä¢ {date}

–ò–Ω–¥–µ–∫—Å—ã üìä
‚Ä¢ S&P 500, DAX, Nikkei, Nasdaq fut  
‚Üí –ß—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞?

–ê–∫—Ü–∏–∏-–ª–∏–¥–µ—Ä—ã üöÄ / –ê—É—Ç—Å–∞–π–¥–µ—Ä—ã üìâ
‚Ä¢ –ø–æ 2-3 –±—É–º–∞–≥–∏ —Å –∫—Ä–æ—Ç–∫–∏–º –ø–æ—è—Å–Ω–µ–Ω–∏–µ–º  
‚Üí –í—ã–≤–æ–¥ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞.

–ö—Ä–∏–ø—Ç–∞ ‚Çø
‚Ä¢ BTC, ETH + 3 –∞–ª—å—Ç–∫–æ–∏–Ω–∞ (—Ü–µ–Ωa –∏ %)  
‚Üí –í—ã–≤–æ–¥.

–ú–∞–∫—Ä–æ-–Ω–æ–≤–æ—Å—Ç–∏ üì∞
‚Ä¢ —Ç—Ä–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ + –∫—Ä–∞—Ç–∫–æ–µ –≤–ª–∏—è–Ω–∏–µ

–¶–∏—Ç–∞—Ç—ã –¥–Ω—è üó£
‚Ä¢ –¥–æ 3 —Ü–∏—Ç–∞—Ç + –æ–¥–Ω–æ-—Å—Ç—Ä–æ—á–Ω—ã–π —Å–º—ã—Å–ª

–ß–∏—Å–ª–æ-—Ñ–∞–∫—Ç ü§î

‚ö°Ô∏è –ò–¥–µ—è –¥–Ω—è
‚Ä¢ 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è actionable-—Å–æ–≤–µ—Ç–∞.

‚ÄºÔ∏è –¢–æ–ª—å–∫–æ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç, –±–µ–∑ **–∫–∞–∫–∏—Ö-–ª–∏–±–æ** HTML/Markdown —Ç–µ–≥–æ–≤! –ú–∞–∫—Å–∏–º—É–º 1500 —Å–∏–º–≤–æ–ª–æ–≤.
"""

def log(msg): print(f"[{datetime.now(timezone.utc):%Y-%m-%d %H:%M:%S} UTC] {msg}", flush=True)

def get_report():
    prompt = PROMPT.format(date=date.today().isoformat())
    r = openai.ChatCompletion.create(
        model=MODEL,
        messages=[{"role": "user", "content": prompt}],
        timeout=TIMEOUT,
        temperature=0.4,
        max_tokens=350      # ‚âà 1500 —Å–∏–º–≤–æ–ª–æ–≤
    )
    return r.choices[0].message.content.strip()

def post(text):
    url = f"https://api.telegram.org/bot{TG_TOKEN}/sendMessage"
    r = requests.post(url, json={"chat_id": CHANNEL_ID, "text": text, "disable_web_page_preview": True}, timeout=10)
    if r.status_code != 200:
        log(f"Telegram error {r.status_code}: {r.text}")

def main():
    try:
        post(get_report())
        log("Posted OK.")
    except Exception as e:
        log(f"Fatal: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()


