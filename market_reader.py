import os
import requests

ALPHA_KEY = os.getenv("ALPHA_KEY")

def get_market_data_text():
    try:
        tickers = {
            "S&P 500": "SPY",
            "DAX": "DAX",
            "NASDAQ": "QQQ"
        }
        result = ["üìä –ò–Ω–¥–µ–∫—Å—ã"]
        for name, symbol in tickers.items():
            url = f"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol={symbol}&apikey={ALPHA_KEY}"
            r = requests.get(url, timeout=10)
            data = r.json()
            if "Global Quote" not in data or "05. price" not in data["Global Quote"]:
                result.append(f"{name}: ‚ùå –æ—à–∏–±–∫–∞")
                continue
            price = float(data["Global Quote"]["05. price"])
            change = float(data["Global Quote"]["10. change percent"].strip('%'))
            result.append(f"{name}: ${price:,.0f} ({change:+.1f}%)")
        return "\n".join(result)
    except Exception as e:
        return f"üìä –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–æ–≤: {e}"

def get_crypto_data(extended=False):
    try:
        symbols = {
            "BTC": "BTCUSDT",
            "ETH": "ETHUSDT"
        }
        result = ["‚Çø –ö—Ä–∏–ø—Ç–∞"]
        insights = []

        for name, pair in symbols.items():
            url = f"https://api.binance.com/api/v3/ticker/24hr?symbol={pair}"
            r = requests.get(url, timeout=10)
            data = r.json()
            price = float(data["lastPrice"])
            change = float(data["priceChangePercent"])
            emoji = "üìà" if change > 0 else "üìâ"
            result.append(f"{emoji} {name}: ${price:,.0f} ({change:+.1f}%)")

            if extended:
                if abs(change) > 3:
                    direction = "—Ä–æ—Å—Ç" if change > 0 else "—Å–Ω–∏–∂–µ–Ω–∏–µ"
                    insights.append(f"‚Äî {name} –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç {direction} –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 3%. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∏–≥–Ω–∞–ª–æ–º –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–æ–≥–æ –∏–º–ø—É–ª—å—Å–∞.")
                elif abs(change) < 0.5:
                    insights.append(f"‚Äî {name} –ø–æ—á—Ç–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π. –í–æ–∑–º–æ–∂–Ω–æ, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∫–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è.")

        if extended and insights:
            result.append("\n‚Üí –ê–Ω–∞–ª–∏–∑:")
            result.extend(insights)

        return "\n".join(result)
    except Exception as e:
        return f"‚Çø –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫—Ä–∏–ø—Ç–µ: {e}"
