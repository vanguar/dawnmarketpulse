import os
import requests
from datetime import date

ALPHA_KEY = os.getenv("ALPHA_KEY")

def get_market_data_text():
    result = ["üìä –ò–Ω–¥–µ–∫—Å—ã"]
    try:
        tickers = {
            "S&P 500": "SPY",
            "DAX": "DAX",
            "NASDAQ": "QQQ"
        }

        for name, symbol in tickers.items():
            url = f"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol={symbol}&apikey={ALPHA_KEY}"
            r = requests.get(url, timeout=10)
            data = r.json()
            if "Global Quote" not in data or "05. price" not in data["Global Quote"]:
                result.append(f"{name}: ‚ùå –æ—à–∏–±–∫–∞")
                continue
            price = float(data["Global Quote"]["05. price"])
            change_percent_str = data["Global Quote"]["10. change percent"].rstrip('%')
            try:
                change_percent = float(change_percent_str)
                result.append(f"{name}: ${price:,.0f} ({change_percent:+.2f}%)")
            except ValueError:
                result.append(f"{name}: ${price:,.0f} ({data['Global Quote']['10. change percent']})")
    except Exception as e:
        result.append(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–æ–≤: {e}")

    return "\n".join(result)

def get_crypto_data(extended=False):
    try:
        today = date.today().strftime("%d.%m.%Y")
        symbols = {
            "BTC": "bitcoin",
            "ETH": "ethereum",
            "SOL": "solana",
            "DOGE": "dogecoin"
        }

        url = (
            "https://api.coingecko.com/api/v3/simple/price"
            "?ids=bitcoin,ethereum,solana,dogecoin"
            "&vs_currencies=usd"
            "&include_24hr_change=true"
        )
        r = requests.get(url, timeout=10)
        r.raise_for_status()
        data = r.json()

        result = [f"‚Çø –ö—Ä–∏–ø—Ç–∞ –Ω–∞ {today}"]
        insights = []

        for name, cid in symbols.items():
            if cid not in data:
                result.append(f"{name}: ‚ùå –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç CoinGecko")
                continue

            price = data[cid].get("usd")
            change = data[cid].get("usd_24h_change")

            if price is None or change is None:
                result.append(f"{name}: ‚ùå –Ω–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç CoinGecko")
                continue

            emoji = "üìà" if change > 0 else "üìâ" if change < 0 else "üìä"

            if 0 < price < 1.0:
                price_format = f"${price:,.4f}"
            elif price == 0 and name == "DOGE":
                price_format = "$0.0000"
            elif price == 0:
                price_format = "$0"
            else:
                price_format = f"${price:,.2f}"

            result.append(f"{emoji} {name}: {price_format} ({change:+.2f}%)")

            if extended:
                if abs(change) >= 5:
                    direction = "—Ä–∞—Å—Ç—ë—Ç" if change > 0 else "–ø–∞–¥–∞–µ—Ç"
                    insights.append(f"‚Äî {name} {direction} –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 5%. –í–æ–∑–º–æ–∂–µ–Ω —Ä–∞–∑–≤–æ—Ä–æ—Ç –∏–ª–∏ –ø—Ä–æ–±–æ–π —É—Ä–æ–≤–Ω—è.")
                elif 0 < abs(change) < 1:
                    insights.append(f"‚Äî {name} –ø–æ—á—Ç–∏ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è (–∏–∑–º. {change:+.2f}%). –í–æ–∑–º–æ–∂–Ω–∞ —Ñ–∞–∑–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –∏–ª–∏ —Ñ–ª—ç—Ç–∞.")
                elif change == 0:
                    insights.append(f"‚Äî {name} –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24—á.")

        if extended and insights:
            result.append("\n‚Üí –ê–Ω–∞–ª–∏–∑:")
            result.extend(insights)

        return "\n".join(result)

    except requests.exceptions.HTTPError as http_err:
        return f"‚Çø –û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç: {http_err}"
    except Exception as e:
        return f"‚Çø –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç: {e}"
